### 定义了log4j.rootLogger，优先级为debug，即包含了所有的优先级日志 ###
### 定义了三个 Appender，分别为 stdout, D, E ###
log4j.rootLogger = debug,stdout,D,E

### 设置 stdout，它实现了控制台日志输出 ###
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
### 使用了自定义的布局模式 ###
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
### 自定义了输出模式 ###
log4j.appender.stdout.layout.ConversionPattern = [%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l%n%m%n

### 设置 D，它实现了把日志输出到文件，优先级为DEBUG ###
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
### 把日志输出到指定的文件之中 ###
log4j.appender.D.File = ${user.home}/Geccologs/debug.log
### 在现有的日志后面追加新的日志 ###
log4j.appender.D.Append = false
log4j.appender.D.Threshold = DEBUG
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

### 输出ERROR 以上级别的日志到 logs/error.log ###
log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
log4j.appender.E.File = ${user.home}/Geccologs/error.log
log4j.appender.E.Append = true
log4j.appender.E.Threshold = ERROR
log4j.appender.E.layout = org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m